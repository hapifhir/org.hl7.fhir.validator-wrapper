{
  "validate_heading" : "Validieren",
  "appscreen_validator_major" : "Ressourcen Validieren",
  "appscreen_validator_minor" : "Geben Sie Ressourcen manuell ein oder laden Sie sie zur Validierung hoch.",
  "enter_resources_heading" : "Ressource eintragen",
  "manual_entry_place_holder" : "Ressource manuell eintragen...",
  "manual_entry_title" : "Code",
  "manual_entry_error" : "Bitte geben Sie etwas zum Validieren an.",
  "manual_entry_cannot_parse_exception" : "Der eingegebene Text kann nicht als gültiges JSON/XML geparst werden.",
  "validate_button" : "Validieren",
  "upload_resources_heading" : "Ressourcen Hochladen",
  "upload_files_title" : "Hochgeladene Dateien",
  "upload_button" : "Hochladen",
  "upload_entry_view" : "Ansicht",
  "upload_entry_delete" : "Löschen",
  "options_heading" : "Optionen",
  "appscreen_options_major" : "Validierungs Optionen",
  "appscreen_options_minor" : "Ändern Sie die Einstellung für die Validierung von Ressourcen.",
  "options_flags_title" : "Flags",
  "options_flags_1_title" : "Native Validierung (doNative)",
  "options_flags_1_description" : "Standardmäßig validiert die Validierungs-Engine nur unter Verwendung der FHIR-Strukturen und Profile. Die Publikationsprozesse erzeugen auch eine Vielzahl von xml, json und RDF-Schemata. Sie können den Validator bitten, auch gegen diese zu validieren, indem Sie diese Option verwenden. Beachten Sie, dass es in diesen Schemata nichts gibt, was nicht ohnehin direkt von der Engine selbst validiert wird, so dass der Hauptnutzen dieser Option darin besteht, die Art von Fehlern zu sehen, die aus diesen Schemata von anderer Software gemeldet werden würden.",
  "options_flags_2_title" : "Must Support (hintAboutMustSupport)",
  "options_flags_2_description" : "In einigen Fällen (z. B. bei der Erstellung von Beispielen für Implementierungsleitfäden oder bei der Prüfung auf potenzielle Interoperabilitätsprobleme mit einem neuen Kommunikationspartner) kann es nützlich sein, zu wissen, wann Datenelemente in einer Instanz vorhanden sind, die in dem/den Profil(en), gegen das/die die Instanz validiert wird, nicht \"mustSupport\" sind. Das Erkennen von Situationen, in denen dies der Fall ist, könnte eine Änderung des Profils bewirken oder einen Designer dazu veranlassen, ein Element aus der Instanz zu entfernen. In anderen Fällen kann das Vorhandensein des Elements in Ordnung sein und die Informationsmeldung ignoriert werden.",
  "options_flags_3_title" : "Gültige REST Referenzen annehmen (assumeValidRestReferences)",
  "options_flags_3_description" : "Wenn der Validator die Zielressourcen nicht abrufen kann, kann er zumindest angewiesen werden, zu überprüfen, ob die Zielressource korrekt ist. Wenn zum Beispiel die erlaubten Zieltypen (Patient oder RelatedPerson) sind und die Referenz Group/12345 lautet, dann wäre dies normalerweise ein Fehler. Dies ist jedoch nicht explizit in der FHIR-Spezifikation festgelegt - eine Referenz könnte auf http://some.server/somewhere lauten - sie muss nicht wie eine gültige FHIR RESTful-Referenz aussehen. Tatsächlich ist es kein Fehler, auch wenn es zufällig so ist. Standardmäßig kann der Validator also nichts über den Typ der Ressource aus dem Inhalt der Referenz selbst schließen. Die meisten Implementierer halten sich jedoch an diese Regeln - ein Verweis auf Group/12345 oder http://some-server/somwhere/Group/12345 bezieht sich definitiv auf eine Group-Ressource. (und es wird definitiv empfohlen, diese Regeln zu befolgen). Das Flag assumeValidRestReferences weist den Validator an, den Typ zu verwenden, der in Referenzen gefunden wird, die wie gültige RESTful-URLs aussehen, wenn der Typ der Referenz validiert wird.",
  "options_flags_4_title" : "Extensible Binding Warnings (noExtensibleBindingWarnings)",
  "options_flags_4_description" : "Wenn der Validator auf einen Code stößt, der nicht Teil eines extensible Bindings ist, fügt er eine Warnung hinzu, um vorzuschlagen, dass der Code überprüft werden sollte. Der Validator kann nicht feststellen, ob die Bedeutung des Codes ihn zu einer unangemessenen Erweiterung macht oder nicht; dies erfordert eine menschliche Überprüfung. Daher auch die Warnung. Aber der Code kann gültig sein - deshalb ist extensible definiert - also ist es in einigen Anwendungen des Validators angebracht, diese Warnungen auszuschalten.",
  "options_flags_5_title" : "Show Times (showTimes)",
  "options_flags_5_description" : "Wenn Sie diese Option wählen, gibt der Validator in der Ausgabe eine Zeile aus, in der er zusammenfasst, wie lange einige interne Prozesse gedauert haben.",
  "options_flags_6_title" : "Erlaube Beispiel URLs (allow-example-urls)",
  "options_flags_6_description" : "Einige der Beispiele in der FHIR-Spezifikation enthalten URLs, die auf example.org verweisen. Standardmäßig markiert der Validator solche Verweise immer als Fehler, aber dies kann mit diesem Parameter überschrieben werden.",
  "options_fhir_title" : "FHIR version",
  "options_default_label" : "Version",
  "options_fhir_description" : "Der Validator prüft die Ressource anhand der Basisspezifikation. Standardmäßig ist dies die Spezifikation Version 4.0.1.",
  "options_ig_title" : "Implementation Guides",
  "options_ig_description_1" : "You can validate against one or more published implementation guides. Select IGs using the dropdown menus below and click the ",
  "options_ig_description_2" : "Add",
  "options_ig_description_3" : " button to include them in your validation.",
  "options_ig_dropdown" : "Select IG",
  "options_ig_dropdown_hint" : "Search IGS...",
  "options_ig_version_dropdown_default" : "No Compatible versions",
  "options_ig_version_dropdown_hint" : "Select IG version",
  "options_ig_add" : "Add",
  "options_ig_selected" : "Selected IGs",
  "options_ig_not_supported" : "IG not supported for FHIR version",
  "options_settings_title" : "Other Settings",
  "options_settings_snomed_title" : "Select SNOMED Version",
  "options_settings_snomed_description" : "You can specify which edition of SNOMED CT for the terminology server to use when doing SNOMED CT Validation.",
  "options_settings_tm_title" : "Set Terminology Server",
  "options_settings_tm_description" : "The validation engine uses a terminology server to validate codes from large external terminologies such as SNOMED CT, LOINC, RxNorm, etc. By default, the terminology server used is tx.fhir.org, which supports most of these terminologies. If you want to use another terminology server, you can specify one here. As a warning, the server will check that the CapabilityStatement of the provided server is set correctly.",
  "options_settings_tm_verify" : "Verify",
  "options_settings_tm_success" : "Terminology server validated successfully!",
  "options_settings_tm_error" : "Terminology server could not be validated!",
  "footer_running_version" : "running validator v",
  "footer_github" : "view project on github",
  "footer_create_issue" : "log an issue with the team",
  "footer_download_cli" : "download the latest cli",
  "footer_doc" : "view the validator documentation",
  "validation_results" : "Results",
  "validation_fatals" : "Fatals",
  "validation_errors" : "Errors",
  "validation_warnings" : "Warnings",
  "validation_info" : "Information"
}