trigger:
- release

pr: none

pool:
  vmImage: 'ubuntu-latest'

variables:
  VERSION:

steps: 
# Checks if the release notes file is populated. Exits if it is not.
- bash: |
    if [ -s RELEASE_NOTES.md ]
    then
          echo "RELEASE_NOTES.md has data, proceeding to next step."
    else
          echo "Your RELEASE_NOTES.md file is empty. Please provide release notes before creating a release."
          exit 1
    fi

- task: JavaToolInstaller@0
  inputs:
    versionSpec: '11'
    jdkArchitectureOption: 'x64'
    jdkSourceOption: 'PreInstalled'

- task: Gradle@2
  inputs:
    gradleWrapperFile: 'gradlew'
    tasks: 'build'
    publishJUnitResults: true
    testResultsFiles: '**/TEST-*.xml'
    javaHomeOption: 'JDKVersion'
    sonarQubeRunAnalysis: false
    jdkVersionOption: 1.11
  displayName: 'gradle build'

# We need the project version to tag the docker image correctly.
# This is done through a helper function within the gradle.kts file.
- bash: |
   gradle wrapper --gradle-version=6.7
   VERSION=$(./gradlew -q printVersion)
   echo $(VERSION)

# Executes docker build and push to publish our build container image
# to the docker registry
- task: Docker@2
  displayName: 'docker build and push'
  inputs:
    containerRegistry: 'dockerhub connection'
    repository: 'markiantorno/validator-wrapper'
    command: 'buildAndPush'
    Dockerfile: '**/Dockerfile'
    tags: $(VERSION)


